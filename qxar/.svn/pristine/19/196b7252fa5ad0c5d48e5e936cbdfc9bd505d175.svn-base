package com.qx.ar.api.service.impl;

import java.util.List;

import javax.annotation.Resource;

import org.apache.poi.ss.formula.functions.T;
import org.springframework.stereotype.Service;

import com.qx.ar.api.service.IUserService;
import com.qx.ar.dao.IAboutDao;
import com.qx.ar.dao.IAlbumDao;
import com.qx.ar.dao.IHelpDao;
import com.qx.ar.dao.ISuggestionDao;
import com.qx.ar.dao.IUserDao;
import com.qx.ar.modle.About;
import com.qx.ar.modle.Album;
import com.qx.ar.modle.Help;
import com.qx.ar.modle.Suggestion;
import com.qx.ar.modle.User;
import com.qx.ar.utils.DateUtils;
import com.qx.ar.utils.MD5Util;
import com.qx.ar.utils.Response;
import com.qx.ar.utils.Result;

@Service
public class UserServiceImpl implements IUserService {

	@Resource
	private IUserDao userDao;

	@Resource
	private ISuggestionDao suggestionDao;

	@Resource
	private IHelpDao helpDao;

	@Resource
	private IAlbumDao albumDao;

	@Resource
	private IAboutDao aboutDao;

	private User user = null;

	@Override
	public Result login(String apptoken, String phone, String pswd) {
		user = new User();
		user.setApptoken(apptoken);
		user.setPhone(phone);
		User resultUser = (User) userDao.findOne(user);
		System.out.println(resultUser);
		if (resultUser == null) {
			return Response.failed("4");
		}
		String password = MD5Util.create(pswd);
		System.out.println(password);
		
		user.setPassword(password);
		if (!password.equals(resultUser.getPassword())) {
			return Response.failed("5");
		}
		return Response.success("登陆成功", resultUser);
	}

	@Override
	public Result register(User regUser) {
		user = new User();
		user.setApptoken(regUser.getApptoken());
		user.setPhone(regUser.getPhone());
		
		User findUser = (User) userDao.findOne(user);
		if (findUser != null) {
			return Response.failed("该账号已注册");
		}
		
		regUser.setPassword(MD5Util.create(regUser.getPassword()));
		int result = userDao.add(regUser);
		if (result > 0) {
			return Response.success("注册成功", user);
		}
		return Response.failed("注册失败");
	}

	@Override
	public Result rephone(int userid, String newphone) {
		user = new User();
		user.setId(userid);
		user.setPhone(newphone);
		if (userDao.update(user)>0) {
			return Response.success("修改成功", user);
		}
		return Response.failed("修改失败");
	}

	@Override
	public Result feedback(String apptoken, String content, String contactway, int userid) {
		Suggestion suggestion = new Suggestion();
		suggestion.setApptoken(apptoken);
		suggestion.setContact(contactway);
		suggestion.setContent(content);
		suggestion.setUserid(userid);
		suggestion.setAddtime(DateUtils.getCurrentTimestamp());
		int result = suggestionDao.add(suggestion);
		if (result > 0) {
			return Response.success("反馈成功", suggestion);
		}
		return Response.failed("反馈失败");
	}

	@Override
	public Result rehead(int userid, String headurl) {
		user = new User();
		user.setId(userid);
		user.setHeadUrl(headurl);
		if (userDao.update(user)>0) {
			return Response.success("修改成功", user);
		}
		return Response.failed("修改失败");
	}

	@Override
	public Result repswd(int userid, String pswd) {
		user = new User();
		user.setId(userid);
		user.setPassword(MD5Util.create(pswd));
		if (userDao.update(user)>0) {
			return Response.success("修改成功", user);
		}
		return Response.failed("修改失败");
	}

	@Override
	public Result help(String apptoken) {
		Help help = new Help();
		List<T> helpList = helpDao.findAll(help);
		if (helpList.size() > 0) {
			return Response.success("查询成功", helpList);
		}
		return Response.failed("查询失败");
	}

	@Override
	public Result about(String apptoken) {
		About about = new About();
		about.setApptoken(apptoken);
		About resultAbout = (About) aboutDao.findOne(about);
		if (resultAbout == null) {
			return Response.failed("查询失败");
		}
		return Response.success("查询成功", resultAbout);
	}

	@Override
	public Result albumlist(int userid) {
		Album album = new Album();
		album.setUserid(userid);
		List<T> albumList = albumDao.findAll(album);
		return Response.success("查询成功", albumList);
	}

	@Override
	public Result renickname(int userid, String nickname) {
		user = new User();
		user.setId(userid);
		user.setNickName(nickname);
		if (userDao.update(user)>0) {
			return Response.success("修改成功", user);
		}
		return Response.failed("修改失败");
	}

}
